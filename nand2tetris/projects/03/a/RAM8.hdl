// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh);
    Register(in=in,load=outa,out=ina);
    Register(in=in,load=outb,out=inb);
    Register(in=in,load=outc,out=inc);
    Register(in=in,load=outd,out=ind);
    Register(in=in,load=oute,out=ine);
    Register(in=in,load=outf,out=inf);
    Register(in=in,load=outg,out=ing);
    Register(in=in,load=outh,out=inh);
    Mux8Way16(a=ina,b=inb,c=inc,d=ind,e=ine,f=inf,g=ing,h=inh,sel=address,out=out);
    
}