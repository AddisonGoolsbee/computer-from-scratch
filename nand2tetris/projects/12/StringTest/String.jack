// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field int len;
    field Array s;

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        if(maxLength<2){
            let s = Array.new(1);
        } else {
            let s = Array.new(maxLength);
        }
        let len = 0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do s.dispose();
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return len;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return s[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let s[j] = c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let s[len] = c;
        let len = len + 1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let len = len - 1;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int sum, i;
        var boolean pos;
        if(s[0] = 45){
            let pos = false;
            let i = 1;
        } else {
            let pos = true;
            let i = 0;
        }

        let sum = 0;
        while(i<len){
            let sum = sum*10 + (s[i]-48);
            let i = i+1;
        }

        if(pos){
            return sum;
        } else {
            return -sum;
        }
        
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int i, a, num, b, temp, j, c;
        let len = 0;

        if(val<0){
            do appendChar(45);
            let val = -val;
        }

        let a = 1;
        let num = 0;
        let i = 0;
        let temp = val;
        let c = 1;
     

        //num is the number of digits
        while(temp>0){
            let num = num+1;
            let temp = temp/10;
        }

        let temp = val;
        
        while(i<num){
            let b = temp;
            let j = 0;
            let c = 1;
            while(j<(num-i-1)){
                let b = b/10;
                let c = c*10;
                let j = j+1;
            }
            do appendChar(b+48);
            let i = i+1;
            let temp = temp-(b*c);
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
