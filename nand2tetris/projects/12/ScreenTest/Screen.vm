function Screen.init 0
push constant 0
not
pop static 0
push constant 0
return
function Screen.binary 1
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
push argument 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop local 0
label IF_FALSE1
push argument 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
pop local 0
label IF_FALSE2
push argument 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8
pop local 0
label IF_FALSE3
push argument 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 16
pop local 0
label IF_FALSE4
push argument 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 32
pop local 0
label IF_FALSE5
push argument 0
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 64
pop local 0
label IF_FALSE6
push argument 0
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 128
pop local 0
label IF_FALSE7
push argument 0
push constant 8
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 256
pop local 0
label IF_FALSE8
push argument 0
push constant 9
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 512
pop local 0
label IF_FALSE9
push argument 0
push constant 10
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 1024
pop local 0
label IF_FALSE10
push argument 0
push constant 11
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 2048
pop local 0
label IF_FALSE11
push argument 0
push constant 12
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 4096
pop local 0
label IF_FALSE12
push argument 0
push constant 13
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 8192
pop local 0
label IF_FALSE13
push argument 0
push constant 14
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 16384
pop local 0
label IF_FALSE14
push argument 0
push constant 15
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 16384
neg
pop local 0
label IF_FALSE15
push argument 1
not
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push constant 1
add
neg
pop local 0
label IF_FALSE16
push local 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 5
push constant 16384
push argument 1
push constant 32
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 4
push local 0
call Memory.peek 1
pop local 2
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push static 0
call Screen.binary 2
pop local 3
push local 2
push local 3
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 4
push static 0
call Screen.binary 2
pop local 3
push local 2
push local 3
and
pop local 1
label IF_END0
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 5
push argument 2
push argument 0
sub
pop local 3
push argument 3
push argument 1
sub
pop local 4
push local 4
push constant 0
lt
push local 3
push constant 0
gt
and
push local 3
push constant 0
lt
push local 4
push constant 0
gt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
neg
pop local 4
push argument 1
pop local 1
push argument 3
pop argument 1
push local 1
pop argument 3
push local 3
neg
pop local 3
push argument 0
pop local 1
push argument 2
pop argument 0
push local 1
pop argument 2
label IF_FALSE1
push constant 0
pop local 1
push constant 0
pop local 2
push local 1
push local 4
neg
call Math.multiply 2
push local 2
push local 3
call Math.multiply 2
sub
pop local 0
label WHILE_EXP0
push local 1
push local 3
lt
push local 1
push local 3
eq
or
push local 2
push local 4
neg
lt
push local 2
push local 4
neg
eq
or
and
not
if-goto WHILE_END0
push argument 0
push local 1
add
push argument 1
push local 2
sub
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
add
pop local 1
push local 0
push local 4
sub
pop local 0
goto IF_END2
label IF_FALSE2
push local 2
push constant 1
add
pop local 2
push local 0
push local 3
sub
pop local 0
label IF_END2
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push local 4
push constant 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
neg
pop local 4
push argument 1
pop local 1
push argument 3
pop argument 1
push local 1
pop argument 3
label IF_FALSE3
push local 3
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 3
neg
pop local 3
push argument 0
pop local 1
push argument 2
pop argument 0
push local 1
pop argument 2
label IF_FALSE4
push constant 0
pop local 1
push constant 0
pop local 2
push local 1
push local 4
call Math.multiply 2
push local 2
push local 3
call Math.multiply 2
sub
pop local 0
push local 4
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
label WHILE_EXP1
push local 1
push local 3
lt
push local 1
push local 3
eq
or
push local 2
push local 4
lt
push local 2
push local 4
eq
or
and
not
if-goto WHILE_END1
push argument 0
push local 1
add
push argument 1
push local 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 2
push constant 1
add
pop local 2
push local 0
push local 3
add
pop local 0
goto IF_END6
label IF_FALSE6
push local 1
push constant 1
add
pop local 1
push local 0
push local 4
sub
pop local 0
label IF_END6
goto WHILE_EXP1
label WHILE_END1
goto IF_END5
label IF_FALSE5
label WHILE_EXP2
push local 1
push local 3
lt
push local 1
push local 3
eq
or
push local 2
push local 4
lt
push local 2
push local 4
eq
or
and
not
if-goto WHILE_END2
push argument 0
push local 1
add
push argument 1
push local 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push constant 1
add
pop local 1
push local 0
push local 4
add
pop local 0
goto IF_END7
label IF_FALSE7
push local 2
push constant 1
add
pop local 2
push local 0
push local 3
sub
pop local 0
label IF_END7
goto WHILE_EXP2
label WHILE_END2
label IF_END5
label IF_END0
push constant 0
return
function Screen.drawRectangle 2
push constant 0
pop local 1
push argument 3
push argument 1
sub
pop local 0
label WHILE_EXP0
push local 1
push local 0
lt
not
if-goto WHILE_END0
push argument 0
push argument 1
push local 1
add
push argument 2
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 2
push argument 2
neg
pop local 1
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
